[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Preface",
    "section": "",
    "text": "이 책은 마크다운과 실행 가능한 코드를 기반으로 작성되었습니다. 이러한 형태의 교재나 작성 기법에 대한 자세한 사항이 궁금하시면 Knuth (1984) 를 참고하세요. 해당 도구를 효율적으로 사용하기 위해서 Quarto를 사용하였습니다. 관련된 사항은 아래 해당 링크를 참조하세요.\n\n\n\n꽤 오랫동안 R을 사용했습니다. 정확히는 Excel의 대용품으로 추천시스템을 구현하는 과정에서 관련 연구자분들과 협업에서 R을 사용했습니다. 데이터 분석이나 추천시스템을 전문적으로 배우지 못하고, 현장에서 추천시스템을 개발하고 개선하는 업무를 진행했기 때문에 잡다한 도구를 많이 사용했습니다. 그 중에서 데이터를 다루는 분들과 의사소통을 위해서 가장 많이 활용했던 도구가 R과 Excel 입니다. 기존에 관련 연구자 및 분석가분들과 함께 공부를 하면서 알게된 내용을 간단하게 정리해둔 문서를 모아두었습니다. 이 문서는 R을 사용하는 분들이나 데이터 분석을 하시는 분들에게 도움이 되었으면 좋겠습니다.\n해당 저장소는 R언어를 사용하는 분들의 관례에 따라 renv를 사용하고 있습니다. 해당 프로젝트를 renv를 사용하세요.",
    "crumbs": [
      "Home",
      "Preface"
    ]
  },
  {
    "objectID": "index.html#소개",
    "href": "index.html#소개",
    "title": "Preface",
    "section": "",
    "text": "꽤 오랫동안 R을 사용했습니다. 정확히는 Excel의 대용품으로 추천시스템을 구현하는 과정에서 관련 연구자분들과 협업에서 R을 사용했습니다. 데이터 분석이나 추천시스템을 전문적으로 배우지 못하고, 현장에서 추천시스템을 개발하고 개선하는 업무를 진행했기 때문에 잡다한 도구를 많이 사용했습니다. 그 중에서 데이터를 다루는 분들과 의사소통을 위해서 가장 많이 활용했던 도구가 R과 Excel 입니다. 기존에 관련 연구자 및 분석가분들과 함께 공부를 하면서 알게된 내용을 간단하게 정리해둔 문서를 모아두었습니다. 이 문서는 R을 사용하는 분들이나 데이터 분석을 하시는 분들에게 도움이 되었으면 좋겠습니다.\n해당 저장소는 R언어를 사용하는 분들의 관례에 따라 renv를 사용하고 있습니다. 해당 프로젝트를 renv를 사용하세요.",
    "crumbs": [
      "Home",
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "R의 자료구조, 제어문 그리고 함수",
    "section": "",
    "text": "벡터는 자료형이 같은 스칼라를 원소로 갖는 1차원 자료구조 입니다. R은 5가지 주요 자료구조(벡터, 행렬, 배열, 리스트, 데이터프레임)을 제공합니다. 그중에서 벡터가 기본 자료구조이며, 나머지 4개의 자료구조는 벡터를 기반으로 확장된 자료구조입니다.\n\n벡터에 관련된 내용은 이 곳을 참고하세요. 일반적으로 R 교재 등을 참고하기 보다는 R에서 제공하는 도움말을 활용하는 것이 좋습니다. R에서 제공하는 도움말은 ?를 사용하여 확인할 수 있습니다. 하지만 가독성이 좋지 않기 때문에 가능하면 홈페이지를 참고하세요.\n그리고, vector 관련 내용 중에서 범주형 자료를 다른 항목도 함께 참고하세요.\n\n\n\n\n리스트는 R에서 가장 다양한 객체를 원소로 가질 수 있는 자료구조입니다. 스칼라, 벡터, 행렬은 물론 데이터프레임, 리스트 및 함수도 원소로 가질 수 있습니다. 이러한 리스트의 특성은 다양한 객체를 하나로 담는 역할을 수행합니다. 따라서 함수가 반환해야 할 객체가 서로 다른 자료구조를 가질 때 리스트를 주로 사용하기 때문에, 많은 함수들의 반환값으로 해당 자료구조가 선택됩니다.\n\n리스트에 관련된 내용은 이 곳을 참고하세요. 매뉴얼에 제시된 수준이면 R을 사용해서 문제를 해결하는데 큰 어려움은 없습니다.\n\n\n\n\nR을 사용해서 데이터 분석을 하다면 가장 많이 다루게 될 자료구조 입니다. 리스트가 행벡터를 원소가 가진다면, 데이터프레임은 열벡터를 원소로 가집니다. 따라서 데이터프레임은 열벡터를 가로 방향으로 붙여서 행과 열을 갖는 직사각형 모양으로 출력됩니다. 데이터프레임의 모든 열벡터는 길이가 같아야 합니다. 만약 길이가 다른 열벡터로 데이터프레임을 생성하려고 하면 에러가 발생합니다.\n\n데이터프레임에 관련된 내용은 이 곳을 참고하세요. 데이터프레임은 R에서 가장 많이 사용되는 자료구조이기 때문에, 해당 자료구조에 대해서 별도의 연습이 필요합니다. 관련하여 아래와 같은 교재를 참고하세요. (나성호, 2021)의 경우 3장, 4장을 참고하세요. (오세종, 2023)의 경우 2장, 3장을 참고하세요.\n\n\n\n\n\n\n\n실행 흐름을 분기하는 if, ifelse와 반복문인 for, while, repeat, break, next 등을 제공합니다. 이러한 제어문을 사용하여 프로그램의 실행 흐름을 제어할 수 있습니다.\n\n제어문에 관련된 내용은 이 곳을 참고하세요. 제어문에 대한 이해가 부족하면 프로그램을 작성하는데 어려움이 있을 수 있으니 별도로 연습이 필요합니다.\n(나성호, 2021)의 경우 5장, 6장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.\n\n\n\n\n사용자 정의 함수 뿐만 아니라 라이브러리에서 제공하는 함수를 이해하기 위해서 함수를 학습하게 됩니다.\n\n함수에 관련된 내용은 이 곳을 참고하세요. 다른 라이브러리를 활용하기 위해서 함수에 대한 이해가 필요합니다. 그리고 데이터프레임을 활용하기 위해서는 apply 등과 같은 함수를 사용해야 하기 때문에 관련 내용은 잘 파악해두시기 바랍니다.\n(나성호, 2021)의 경우 7장, 8장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R`의 자료구조, 제어문 그리고 함수"
    ]
  },
  {
    "objectID": "intro.html#벡터",
    "href": "intro.html#벡터",
    "title": "주요 자료 구조",
    "section": "",
    "text": "벡터는 자료형이 같은 스칼라를 원소로 갖는 1차원 자료구조 입니다. R은 5가지 주요 자료구조(벡터, 행렬, 배열, 리스트, 데이터프레임)을 제공합니다. 그중에서 벡터가 기본 자료구조이며, 나머지 4개의 자료구조는 벡터를 기반으로 확장된 자료구조입니다.\n\n\n\n\nR에서 하나의 값은 자료가 지닌 형태에 따라 실수, 정수, 문자, 논리, 범주(요인) 자료형(data type)으로 표현\n\n실수형(numeric), 소수점을 포함하고 있는 숫자\n정수형(integer), 소수점이 없는 숫자, 마지막에 L을 붙이면 정수형으로 표현\n문자형(character), 숫자가 아니라 일반적인 문자로 구성된 자료형\n논리형(logical) : TRUE(또는 T) 및 FALSE(또는 F)로 구성된 자료형\n범주형(factor), 명목형인 범주(요인)로 구성된 자료형\n\n벡터는 동일한 자료형을 갖는 원소들의 집합\n\n자료형이 다른 스칼라 또는 벡터를 추가하면 자동으로 자료형이 변환되는 강제변환(coercion) 됨\n논리, 범주 -&gt; 정수 -&gt; 실수 -&gt; 문자 순으로 변환됨\n\n\n\n\n\n\na &lt;- c(1,2,3)\nclass(a)\n\n[1] \"numeric\"\n\nb &lt;- c(1L, 2L, 3L)\nclass(b)\n\n[1] \"integer\"\n\nc &lt;- c('hello', 'world')\nclass(c)\n\n[1] \"character\"\n\nd &lt;- c(FALSE, TRUE)\nclass(d)\n\n[1] \"logical\"\n\ne &lt;- as.factor(x = c('한국', '일본', '중국', '미국', '중국', '한국', '미국', '일본'))\nclass(e)\n\n[1] \"factor\"\n\nas.integer(x = e)\n\n[1] 4 2 3 1 3 4 1 2",
    "crumbs": [
      "Home",
      "R 기초",
      "주요 자료 구조"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References\n\n(나성호, 2021) (오세종, 2023)\n\n나성호. (2021). Must have 나성호의 r 데이터 분석 입문. 골든래빗.\n\n\n오세종. (2023). 모두를 위한 r 데이터 분석 입문 (2판). 한빛미디어.",
    "crumbs": [
      "Home",
      "References"
    ]
  },
  {
    "objectID": "ds-vector.html",
    "href": "ds-vector.html",
    "title": "R 기초에 관한 자료",
    "section": "",
    "text": "벡터는 자료형이 같은 스칼라를 원소로 갖는 1차원 자료구조 입니다. R은 5가지 주요 자료구조(벡터, 행렬, 배열, 리스트, 데이터프레임)을 제공합니다. 그중에서 벡터가 기본 자료구조이며, 나머지 4개의 자료구조는 벡터를 기반으로 확장된 자료구조입니다.\n\n벡터에 관련된 내용은 이 곳을 참고하세요. 일반적으로 R 교재 등을 참고하기 보다는 R에서 제공하는 도움말을 활용하는 것이 좋습니다. R에서 제공하는 도움말은 ?를 사용하여 확인할 수 있습니다. 하지만 가독성이 좋지 않기 때문에 가능하면 홈페이지를 참고하세요.\n그리고, vector 관련 내용 중에서 범주형 자료를 다른 항목도 함께 참고하세요.\n\n\n\n\n리스트는 R에서 가장 다양한 객체를 원소로 가질 수 있는 자료구조입니다. 스칼라, 벡터, 행렬은 물론 데이터프레임, 리스트 및 함수도 원소로 가질 수 있습니다. 이러한 리스트의 특성은 다양한 객체를 하나로 담는 역할을 수행합니다. 따라서 함수가 반환해야 할 객체가 서로 다른 자료구조를 가질 때 리스트를 주로 사용하기 때문에, 많은 함수들의 반환값으로 해당 자료구조가 선택됩니다.\n\n리스트에 관련된 내용은 이 곳을 참고하세요. 매뉴얼에 제시된 수준이면 R을 사용해서 문제를 해결하는데 큰 어려움은 없습니다.\n\n\n\n\nR을 사용해서 데이터 분석을 하다면 가장 많이 다루게 될 자료구조 입니다. 리스트가 행벡터를 원소가 가진다면, 데이터프레임은 열벡터를 원소로 가집니다. 따라서 데이터프레임은 열벡터를 가로 방향으로 붙여서 행과 열을 갖는 직사각형 모양으로 출력됩니다. 데이터프레임의 모든 열벡터는 길이가 같아야 합니다. 만약 길이가 다른 열벡터로 데이터프레임을 생성하려고 하면 에러가 발생합니다.\n\n데이터프레임에 관련된 내용은 이 곳을 참고하세요. 데이터프레임은 R에서 가장 많이 사용되는 자료구조이기 때문에, 해당 자료구조에 대해서 별도의 연습이 필요합니다. 관련하여 아래와 같은 교재를 참고하세요. (나성호, 2021)의 경우 3장, 4장을 참고하세요. (오세종, 2023)의 경우 2장, 3장을 참고하세요.\n\n\n\n\n\n\n\n실행 흐름을 분기하는 if, ifelse와 반복문인 for, while, repeat, break, next 등을 제공합니다. 이러한 제어문을 사용하여 프로그램의 실행 흐름을 제어할 수 있습니다.\n\n제어문에 관련된 내용은 이 곳을 참고하세요. 제어문에 대한 이해가 부족하면 프로그램을 작성하는데 어려움이 있을 수 있으니 별도로 연습이 필요합니다.\n(나성호, 2021)의 경우 5장, 6장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.\n\n\n\n\n사용자 정의 함수 뿐만 아니라 라이브러리에서 제공하는 함수를 이해하기 위해서 함수를 학습하게 됩니다.\n\n함수에 관련된 내용은 이 곳을 참고하세요. 다른 라이브러리를 활용하기 위해서 함수에 대한 이해가 필요합니다. 그리고 데이터프레임을 활용하기 위해서는 apply 등과 같은 함수를 사용해야 하기 때문에 관련 내용은 잘 파악해두시기 바랍니다.\n(나성호, 2021)의 경우 7장, 8장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R`의 자료구조, 제어문 그리고 함수"
    ]
  },
  {
    "objectID": "ds-vector.html#벡터",
    "href": "ds-vector.html#벡터",
    "title": "주요 자료 구조",
    "section": "",
    "text": "벡터는 자료형이 같은 스칼라를 원소로 갖는 1차원 자료구조 입니다. R은 5가지 주요 자료구조(벡터, 행렬, 배열, 리스트, 데이터프레임)을 제공합니다. 그중에서 벡터가 기본 자료구조이며, 나머지 4개의 자료구조는 벡터를 기반으로 확장된 자료구조입니다.\n\n벡터에 관련된 내용은 이 곳을 참고하세요. 일반적으로 R 교재 등을 참고하기 보다는 R에서 제공하는 도움말을 활용하는 것이 좋습니다. R에서 제공하는 도움말은 ?를 사용하여 확인할 수 있습니다. 하지만 가독성이 좋지 않기 때문에 가능하면 홈페이지를 참고하세요.\n그리고, vector 관련 내용 중에서 범주형 자료를 다른 항목도 함께 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R` 기초에 관한 자료"
    ]
  },
  {
    "objectID": "ds-vector.html#리스트",
    "href": "ds-vector.html#리스트",
    "title": "주요 자료 구조",
    "section": "",
    "text": "리스트는 R에서 가장 다양한 객체를 원소로 가질 수 있는 자료구조입니다. 스칼라, 벡터, 행렬은 물론 데이터프레임, 리스트 및 함수도 원소로 가질 수 있습니다. 이러한 리스트의 특성은 다양한 객체를 하나로 담는 역할을 수행합니다. 따라서 함수가 반환해야 할 객체가 서로 다른 자료구조를 가질 때 리스트를 주로 사용하기 때문에, 많은 함수들의 반환값으로 해당 자료구조가 선택됩니다.\n\n리스트에 관련된 내용은 이 곳을 참고하세요. 매뉴얼에 제시된 수준이면 R을 사용해서 문제를 해결하는데 큰 어려움은 없습니다.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R` 기초에 관한 자료"
    ]
  },
  {
    "objectID": "ds-vector.html#데이터프레임",
    "href": "ds-vector.html#데이터프레임",
    "title": "주요 자료 구조",
    "section": "",
    "text": "R을 사용해서 데이터 분석을 하다면 가장 많이 다루게 될 자료구조 입니다. 리스트가 행벡터를 원소가 가진다면, 데이터프레임은 열벡터를 원소로 가집니다. 따라서 데이터프레임은 열벡터를 가로 방향으로 붙여서 행과 열을 갖는 직사각형 모양으로 출력됩니다. 데이터프레임의 모든 열벡터는 길이가 같아야 합니다. 만약 길이가 다른 열벡터로 데이터프레임을 생성하려고 하면 에러가 발생합니다.\n\n데이터프레임에 관련된 내용은 이 곳을 참고하세요. 데이터프레임은 R에서 가장 많이 사용되는 자료구조이기 때문에, 해당 자료구조에 대해서 별도의 연습이 필요합니다. 관련하여 아래와 같은 교재를 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R` 기초에 관한 자료"
    ]
  },
  {
    "objectID": "ds-vector.html#자료구조",
    "href": "ds-vector.html#자료구조",
    "title": "R 기초에 관한 자료",
    "section": "",
    "text": "벡터는 자료형이 같은 스칼라를 원소로 갖는 1차원 자료구조 입니다. R은 5가지 주요 자료구조(벡터, 행렬, 배열, 리스트, 데이터프레임)을 제공합니다. 그중에서 벡터가 기본 자료구조이며, 나머지 4개의 자료구조는 벡터를 기반으로 확장된 자료구조입니다.\n\n벡터에 관련된 내용은 이 곳을 참고하세요. 일반적으로 R 교재 등을 참고하기 보다는 R에서 제공하는 도움말을 활용하는 것이 좋습니다. R에서 제공하는 도움말은 ?를 사용하여 확인할 수 있습니다. 하지만 가독성이 좋지 않기 때문에 가능하면 홈페이지를 참고하세요.\n그리고, vector 관련 내용 중에서 범주형 자료를 다른 항목도 함께 참고하세요.\n\n\n\n\n리스트는 R에서 가장 다양한 객체를 원소로 가질 수 있는 자료구조입니다. 스칼라, 벡터, 행렬은 물론 데이터프레임, 리스트 및 함수도 원소로 가질 수 있습니다. 이러한 리스트의 특성은 다양한 객체를 하나로 담는 역할을 수행합니다. 따라서 함수가 반환해야 할 객체가 서로 다른 자료구조를 가질 때 리스트를 주로 사용하기 때문에, 많은 함수들의 반환값으로 해당 자료구조가 선택됩니다.\n\n리스트에 관련된 내용은 이 곳을 참고하세요. 매뉴얼에 제시된 수준이면 R을 사용해서 문제를 해결하는데 큰 어려움은 없습니다.\n\n\n\n\nR을 사용해서 데이터 분석을 하다면 가장 많이 다루게 될 자료구조 입니다. 리스트가 행벡터를 원소가 가진다면, 데이터프레임은 열벡터를 원소로 가집니다. 따라서 데이터프레임은 열벡터를 가로 방향으로 붙여서 행과 열을 갖는 직사각형 모양으로 출력됩니다. 데이터프레임의 모든 열벡터는 길이가 같아야 합니다. 만약 길이가 다른 열벡터로 데이터프레임을 생성하려고 하면 에러가 발생합니다.\n\n데이터프레임에 관련된 내용은 이 곳을 참고하세요. 데이터프레임은 R에서 가장 많이 사용되는 자료구조이기 때문에, 해당 자료구조에 대해서 별도의 연습이 필요합니다. 관련하여 아래와 같은 교재를 참고하세요. (나성호, 2021)의 경우 3장, 4장을 참고하세요. (오세종, 2023)의 경우 2장, 3장을 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R`의 자료구조, 제어문 그리고 함수"
    ]
  },
  {
    "objectID": "ds-vector.html#제어와-함수",
    "href": "ds-vector.html#제어와-함수",
    "title": "R 기초에 관한 자료",
    "section": "",
    "text": "실행 흐름을 분기하는 if, ifelse와 반복문인 for, while, repeat, break, next 등을 제공합니다. 이러한 제어문을 사용하여 프로그램의 실행 흐름을 제어할 수 있습니다.\n\n제어문에 관련된 내용은 이 곳을 참고하세요. 제어문에 대한 이해가 부족하면 프로그램을 작성하는데 어려움이 있을 수 있으니 별도로 연습이 필요합니다.\n(나성호, 2021)의 경우 5장, 6장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.\n\n\n\n\n사용자 정의 함수 뿐만 아니라 라이브러리에서 제공하는 함수를 이해하기 위해서 함수를 학습하게 됩니다.\n\n함수에 관련된 내용은 이 곳을 참고하세요. 다른 라이브러리를 활용하기 위해서 함수에 대한 이해가 필요합니다. 그리고 데이터프레임을 활용하기 위해서는 apply 등과 같은 함수를 사용해야 하기 때문에 관련 내용은 잘 파악해두시기 바랍니다.\n(나성호, 2021)의 경우 7장, 8장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R`의 자료구조, 제어문 그리고 함수"
    ]
  },
  {
    "objectID": "intro.html#자료구조",
    "href": "intro.html#자료구조",
    "title": "R의 자료구조, 제어문 그리고 함수",
    "section": "",
    "text": "벡터는 자료형이 같은 스칼라를 원소로 갖는 1차원 자료구조 입니다. R은 5가지 주요 자료구조(벡터, 행렬, 배열, 리스트, 데이터프레임)을 제공합니다. 그중에서 벡터가 기본 자료구조이며, 나머지 4개의 자료구조는 벡터를 기반으로 확장된 자료구조입니다.\n\n벡터에 관련된 내용은 이 곳을 참고하세요. 일반적으로 R 교재 등을 참고하기 보다는 R에서 제공하는 도움말을 활용하는 것이 좋습니다. R에서 제공하는 도움말은 ?를 사용하여 확인할 수 있습니다. 하지만 가독성이 좋지 않기 때문에 가능하면 홈페이지를 참고하세요.\n그리고, vector 관련 내용 중에서 범주형 자료를 다른 항목도 함께 참고하세요.\n\n\n\n\n리스트는 R에서 가장 다양한 객체를 원소로 가질 수 있는 자료구조입니다. 스칼라, 벡터, 행렬은 물론 데이터프레임, 리스트 및 함수도 원소로 가질 수 있습니다. 이러한 리스트의 특성은 다양한 객체를 하나로 담는 역할을 수행합니다. 따라서 함수가 반환해야 할 객체가 서로 다른 자료구조를 가질 때 리스트를 주로 사용하기 때문에, 많은 함수들의 반환값으로 해당 자료구조가 선택됩니다.\n\n리스트에 관련된 내용은 이 곳을 참고하세요. 매뉴얼에 제시된 수준이면 R을 사용해서 문제를 해결하는데 큰 어려움은 없습니다.\n\n\n\n\nR을 사용해서 데이터 분석을 하다면 가장 많이 다루게 될 자료구조 입니다. 리스트가 행벡터를 원소가 가진다면, 데이터프레임은 열벡터를 원소로 가집니다. 따라서 데이터프레임은 열벡터를 가로 방향으로 붙여서 행과 열을 갖는 직사각형 모양으로 출력됩니다. 데이터프레임의 모든 열벡터는 길이가 같아야 합니다. 만약 길이가 다른 열벡터로 데이터프레임을 생성하려고 하면 에러가 발생합니다.\n\n데이터프레임에 관련된 내용은 이 곳을 참고하세요. 데이터프레임은 R에서 가장 많이 사용되는 자료구조이기 때문에, 해당 자료구조에 대해서 별도의 연습이 필요합니다. 관련하여 아래와 같은 교재를 참고하세요. (나성호, 2021)의 경우 3장, 4장을 참고하세요. (오세종, 2023)의 경우 2장, 3장을 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R`의 자료구조, 제어문 그리고 함수"
    ]
  },
  {
    "objectID": "intro.html#제어와-함수",
    "href": "intro.html#제어와-함수",
    "title": "R의 자료구조, 제어문 그리고 함수",
    "section": "",
    "text": "실행 흐름을 분기하는 if, ifelse와 반복문인 for, while, repeat, break, next 등을 제공합니다. 이러한 제어문을 사용하여 프로그램의 실행 흐름을 제어할 수 있습니다.\n\n제어문에 관련된 내용은 이 곳을 참고하세요. 제어문에 대한 이해가 부족하면 프로그램을 작성하는데 어려움이 있을 수 있으니 별도로 연습이 필요합니다.\n(나성호, 2021)의 경우 5장, 6장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.\n\n\n\n\n사용자 정의 함수 뿐만 아니라 라이브러리에서 제공하는 함수를 이해하기 위해서 함수를 학습하게 됩니다.\n\n함수에 관련된 내용은 이 곳을 참고하세요. 다른 라이브러리를 활용하기 위해서 함수에 대한 이해가 필요합니다. 그리고 데이터프레임을 활용하기 위해서는 apply 등과 같은 함수를 사용해야 하기 때문에 관련 내용은 잘 파악해두시기 바랍니다.\n(나성호, 2021)의 경우 7장, 8장을 참고하세요. (오세종, 2023)의 경우 4장을 참고하세요.",
    "crumbs": [
      "Home",
      "R 기초",
      "`R`의 자료구조, 제어문 그리고 함수"
    ]
  },
  {
    "objectID": "ggplot2.html",
    "href": "ggplot2.html",
    "title": "ggplot2",
    "section": "",
    "text": "R 패키지를 활용하여 다양한 작업을 할 수 있지만, 저는 그 중에서 데이터 분석과 통계 분석 및 모델을 기반으로 많은 업무를 진행하였습니다. 따라서 제가 생각하기 R 패키지 중에서 가장 활용 용도가 높다고 생각하는 ggplot2을 사용해서 간단한 R 코드를 연습하고, 데이터 시각화를 진행해보겠습니다.\n\n제가 지금까지 사용했던 모든 그래프 도구 중에서 가장 멋진 라이브러리 입니다. 모든 그래프 도구가 나름의 멋짐을 가지고 있지만, ggplot2가 가져다 주는 조합의 묘미가 굉장히 흥미롭게 재미있습니다. 그리고 R을 사용함에 있어서 ggplot2를 잘 활용하면 좋은 데이터를 기반으로 더 나은 의사소통을 할 수 있습니다.\n\n\nggplot2 패키지를 사용하기 위해서는 아래와 같은 패키지를 설치하고 불러와야 합니다. 패키지 설치는 install.packages()를 사용하시면 됩니다. ggplot2, dplyr, readr은 tidyverse 패키지에 포함되어 있기 때문에, 일반적으로 tidyverse를 설치하실 때 대부분 설치되었있습니다. 만약 설치되어 있지 않다면 install.packages(\"tidyverse\")로 설치를 진행하시면 됩니다. ggthemes는 ggplot2의 테마를 추가 할 수 있는 패키지입니다.\n\nlibrary(ggplot2)\nlibrary(ggthemes) \nlibrary(dplyr) \nlibrary(readr)\nlibrary(forcats)\n# library(extrafont)\n# loadfonts(device = 'win')\n\n\n\n\n간단한 데이터를 생성하고, 이를 시각화하는 방법을 알아보겠습니다. 이 데이터는 (Mauricio Vargas Sepúlveda, 2023)에서 가져왔습니다.\n\nchilean_exports &lt;- \"year,product,export,percentage\n2006,copper,4335009500,81\n2006,others,1016726518,19\n2007,copper,9005361914,86\n2007,others,1523085299,14\n2008,copper,6907056354,80\n2008,others,1762684216,20\n2009,copper,10529811075,81\n2009,others,2464094241,19\n2010,copper,14828284450,85\n2010,others,2543015596,15\n2011,copper,15291679086,82\n2011,others,3447972354,18\n2012,copper,14630686732,80\n2012,others,3583968218,20\n2013,copper,15244038840,79\n2013,others,4051281128,21\n2014,copper,14703374241,78\n2014,others,4251484600,22\n2015,copper,13155922363,78\n2015,others,3667286912,22\n\"\nexports_data &lt;- read_csv(chilean_exports)\n\nRows: 20 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): product\ndbl (3): year, export, percentage\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n먼저 간단한 선(line) 그래프를 그려보겠습니다. 그래프를 초기화하기 위해 ggplot에 exports_data를 데이터로 지정하고 각 축에 변수(x, y)를 지정합니다. 그런 다음 geom_line 명령을 추가하여 선 그래프 화면에 출력하도록 합니다. 선 그래프의 두께를 조절하기 위해서 linewidth를 1.5로 설정합니다. 산점도(geom_point), 박스(geom_boxplot), 히스토그램(geom_histogram), 막대(geom_bar) 등과 같은 그래프 등을 많이 활용합니다.\n\np1 &lt;- ggplot(data = exports_data, mapping = aes(x = year, y = export, colour = product)) +\n  geom_line(linewidth = 1.5)\np1\n\n\n\n\n\n\n\n\n그래프에 몇가지 정보를 추가해보도록 하겠습니다. 특히 범례를 중점적으로 수정하도록 하겠습니다.\n\nexports_data &lt;- exports_data %&gt;%\n  mutate(product = factor(product, levels = c(\"copper\",\"others\"),\n                          labels = c(\"Copper \",\"Pulp wood, Fruit, Salmon & Others\")))\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  theme(text=element_text(family=\"MaruBuri Regular\"),\n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\",\n        legend.title = element_blank())\np1\n\n\n\n\n\n\n\n\n축(x,y)의 데이터와 제목을 추가하도록 하겠습니다.\n\np1 &lt;- p1 + scale_x_continuous(breaks = seq(2006,2015,1)) + \n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\")\np1\n\n\n\n\n\n\n\n\n약간의 색을 변경할 수도 있습니다.\n\ncolour &lt;- c(\"#5F9EA0\", \"#E1B378\")\np1 &lt;- p1 + scale_colour_manual(values = colour)\np1\n\n\n\n\n\n\n\n\n해당 그래프에 테마(theme_bw)를 적용해보도록 하겠습니다.\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_colour_manual(values = colour) +\n  theme_bw() +\n  theme(legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank())\np1\n\n\n\n\n\n\n\n\n테마를 조금 수정해보도록 하겠습니다. 세부적인 사항들은 ggplot2 theme에서 확인하실 수 있습니다.\n\nfill &lt;- c(\"#40b8d0\",\"#b2d183\")\n\np1 &lt;- ggplot(data = exports_data, mapping = aes(y = export, x = year, colour = product)) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(linewidth = .5, colour = \"black\"),\n      axis.line.y = element_line(linewidth = .5, colour = \"black\"),\n      axis.text.x = element_text(colour = \"black\", size = 10),\n      axis.text.y = element_text(colour = \"black\", size = 10),\n      legend.key = element_rect(fill = \"white\", colour = \"white\"),\n      legend.position = \"bottom\", legend.direction = \"horizontal\",\n      legend.title = element_blank(),\n      panel.grid.major = element_blank(),\n      panel.grid.minor = element_blank(), panel.border = element_blank(),\n      panel.background = element_blank())\np1\n\n\n\n\n\n\n\n\n테마(theme_economist)를 적용하고, 필요한 부분만 수정해보도록 하겠습니다.\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product),\n  data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  theme_economist() + scale_colour_economist() +\n  theme(axis.line.x = element_line(linewidth = .5, colour = \"black\"),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\"))\np1\n\n\n\n\n\n\n\n\n선 그래프의 가독성을 고려해서 아래와 같이 자신만의 테마로 구성하는 방법도 존재합니다.\n\ncolour &lt;- c(\"#40b8d0\", \"#b2d183\")\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_colour_manual(values = colour) +\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, size = .5),\n        axis.text.x = element_text(colour = \"black\", size = 10),\n        axis.text.y = element_text(colour = \"black\", size = 10),\n        legend.key = element_rect(fill = \"white\", colour = \"white\"),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank(),\n        panel.grid.major = element_line(colour = \"#d3d3d3\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\", face = \"bold\"),\n        text = element_text(family = \"MaruBuri Regular\"),\n        legend.key.size = unit(2, \"lines\")) +\n  geom_point(size = 3)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np1\n\n\n\n\n\n\n\n\n\n\n\n영역 차트는 선 그래프와 유사하지만, 선 그래프의 아래 부분을 색칠하여 영역을 표시하는 차트입니다. 아래는 영역 차트를 그리는 예제입니다. 영역 차트는 geom_area()를 사용하여 그릴 수 있습니다.\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = product), data = exports_data) + geom_area()\np2\n\n\n\n\n\n\n\n\n영역을 채우는 순서를 교체(fct_rev)하려고 합니다.\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + geom_area()\np2\n\n\n\n\n\n\n\n\n범례를 조정해보도록 하겠습니다.\n\np2 &lt;- p2 + theme(legend.position = \"bottom\", \n                 legend.direction = \"horizontal\", \n                 legend.title = element_blank())\np2\n\n\n\n\n\n\n\n\n앞선 예제와 같이 그래프에 몇가지 정보를 추가하기 위해서는 기존의 데이터를 수정해야 합니다.\n\nexports_data &lt;- exports_data %&gt;%\n  mutate(product = factor(product, levels = c(\"copper\",\"others\"),\n                          labels = c(\"Copper \",\"Pulp wood, Fruit, Salmon & Others\")))\n\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\",\n        legend.title = element_blank()) + guides(fill = guide_legend(reverse = T))\np2\n\n\n\n\n\n\n\n\nx축 간격도 조정해보도록 하겠습니다.\n\np2 &lt;- p2 + scale_x_continuous(breaks = seq(2006,2015,1)) \np2\n\n\n\n\n\n\n\n\n라벨도 변경하고, 제목도 추가하도록 하겠습니다.\n\np2 &lt;- p2 + labs(title = \"Composition of Exports to China ($)\",\n                subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\")\np2\n\n\n\n\n\n\n\n\n색도 변경하겠습니다.\n\nfill &lt;- c(\"#E1B378\",\"#5F9EA0\")\np2 &lt;- p2 + scale_fill_manual(values = fill) \np2\n\n\n\n\n\n\n\n\n테마를 적용하고, 필요한 부분만 수정해보도록 하겠습니다.\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme_bw() +\n  theme(legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank()) +\n  guides(fill = guide_legend(reverse = T)) \np2\n\n\n\n\n\n\n\n\n간단하게 폰트도 변경하도록 하겠습니다.\n\nfill &lt;- c(\"#b2d183\",\"#40b8d0\")\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n        axis.line.y = element_line(size = .5, colour = \"black\"), \n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        panel.border = element_blank(), \n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np2\n\n\n\n\n\n\n\n\ntheme_economist 테마를 적용하고, 필요한 부분만 수정해보도록 하겠습니다.\n\nfill &lt;- c(\"#00a3dc\",\"#01526d\")\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  theme_economist() +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n        axis.line.y = element_line(size = .5, colour = \"black\"), \n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        panel.border = element_blank(), \n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \np2\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  theme_fivethirtyeight() +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n        axis.line.y = element_line(size = .5, colour = \"black\"), \n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        panel.border = element_blank(), \n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        legend.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \np2\n\n\n\n\n\n\n\n\n\nfill &lt;- c(\"#b2d183\",\"#40b8d0\")\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, size = .5),\n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank(),\n        panel.grid.major = element_line(colour = \"#d3d3d3\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.title = element_text(size = 14, family = \"MaruBuri Regular\", face = \"bold\"), \n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \np2",
    "crumbs": [
      "Home",
      "R 기초",
      "ggplot2"
    ]
  },
  {
    "objectID": "ggplot2.html#준비",
    "href": "ggplot2.html#준비",
    "title": "ggplot2",
    "section": "",
    "text": "ggplot2 패키지를 사용하기 위해서는 아래와 같은 패키지를 설치하고 불러와야 합니다. 패키지 설치는 install.packages()를 사용하시면 됩니다. ggplot2, dplyr, readr은 tidyverse 패키지에 포함되어 있기 때문에, 일반적으로 tidyverse를 설치하실 때 대부분 설치되었있습니다. 만약 설치되어 있지 않다면 install.packages(\"tidyverse\")로 설치를 진행하시면 됩니다. ggthemes는 ggplot2의 테마를 추가 할 수 있는 패키지입니다.\n\nlibrary(ggplot2)\nlibrary(ggthemes) \nlibrary(dplyr) \nlibrary(readr)\nlibrary(forcats)\n# library(extrafont)\n# loadfonts(device = 'win')",
    "crumbs": [
      "Home",
      "R 기초",
      "ggplot2"
    ]
  },
  {
    "objectID": "ggplot2.html#line",
    "href": "ggplot2.html#line",
    "title": "ggplot2",
    "section": "",
    "text": "간단한 데이터를 생성하고, 이를 시각화하는 방법을 알아보겠습니다. 이 데이터는 (Mauricio Vargas Sepúlveda, 2023)에서 가져왔습니다.\n\nchilean_exports &lt;- \"year,product,export,percentage\n2006,copper,4335009500,81\n2006,others,1016726518,19\n2007,copper,9005361914,86\n2007,others,1523085299,14\n2008,copper,6907056354,80\n2008,others,1762684216,20\n2009,copper,10529811075,81\n2009,others,2464094241,19\n2010,copper,14828284450,85\n2010,others,2543015596,15\n2011,copper,15291679086,82\n2011,others,3447972354,18\n2012,copper,14630686732,80\n2012,others,3583968218,20\n2013,copper,15244038840,79\n2013,others,4051281128,21\n2014,copper,14703374241,78\n2014,others,4251484600,22\n2015,copper,13155922363,78\n2015,others,3667286912,22\n\"\nexports_data &lt;- read_csv(chilean_exports)\n\nRows: 20 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): product\ndbl (3): year, export, percentage\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n먼저 간단한 선(line) 그래프를 그려보겠습니다. 그래프를 초기화하기 위해 ggplot에 exports_data를 데이터로 지정하고 각 축에 변수(x, y)를 지정합니다. 그런 다음 geom_line 명령을 추가하여 선 그래프 화면에 출력하도록 합니다. 선 그래프의 두께를 조절하기 위해서 linewidth를 1.5로 설정합니다. 산점도(geom_point), 박스(geom_boxplot), 히스토그램(geom_histogram), 막대(geom_bar) 등과 같은 그래프 등을 많이 활용합니다.\n\np1 &lt;- ggplot(data = exports_data, mapping = aes(x = year, y = export, colour = product)) +\n  geom_line(linewidth = 1.5)\np1\n\n\n\n\n\n\n\n\n그래프에 몇가지 정보를 추가해보도록 하겠습니다. 특히 범례를 중점적으로 수정하도록 하겠습니다.\n\nexports_data &lt;- exports_data %&gt;%\n  mutate(product = factor(product, levels = c(\"copper\",\"others\"),\n                          labels = c(\"Copper \",\"Pulp wood, Fruit, Salmon & Others\")))\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  theme(text=element_text(family=\"MaruBuri Regular\"),\n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\",\n        legend.title = element_blank())\np1\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n축(x,y)의 데이터와 제목을 추가하도록 하겠습니다.\n\np1 &lt;- p1 + scale_x_continuous(breaks = seq(2006,2015,1)) + \n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\")\np1\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n약간의 색을 변경할 수도 있습니다.\n\ncolour &lt;- c(\"#5F9EA0\", \"#E1B378\")\np1 &lt;- p1 + scale_colour_manual(values = colour)\np1\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n해당 그래프에 테마(theme_bw)를 적용해보도록 하겠습니다.\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(size = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_colour_manual(values = colour) +\n  theme_bw() +\n  theme(legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank())\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\np1\n\n\n\n\n\n\n\n\n테마를 조금 수정해보도록 하겠습니다. 세부적인 사항들은 ggplot2 theme에서 확인하실 수 있습니다.\n\nfill &lt;- c(\"#40b8d0\",\"#b2d183\")\n\np1 &lt;- ggplot(data = exports_data, mapping = aes(y = export, x = year, colour = product)) +\n  geom_line(size = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n      axis.line.y = element_line(size = .5, colour = \"black\"),\n      axis.text.x = element_text(colour = \"black\", size = 10),\n      axis.text.y = element_text(colour = \"black\", size = 10),\n      legend.key = element_rect(fill = \"white\", colour = \"white\"),\n      legend.position = \"bottom\", legend.direction = \"horizontal\",\n      legend.title = element_blank(),\n      panel.grid.major = element_blank(),\n      panel.grid.minor = element_blank(), panel.border = element_blank(),\n      panel.background = element_blank())\n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np1\n\n\n\n\n\n\n\n\n테마(theme_economist)를 적용하고, 필요한 부분만 수정해보도록 하겠습니다.\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product),\n  data = exports_data) +\n  geom_line(size = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  theme_economist() + scale_colour_economist() +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\"))\np1\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\n\n\n\n\n\n\n\n\n선 그래프의 가독성을 고려해서 아래와 같이 자신만의 테마로 구성하는 방법도 존재합니다.\n\ncolour &lt;- c(\"#40b8d0\", \"#b2d183\")\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(size = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_colour_manual(values = colour) +\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, size = .5),\n        axis.text.x = element_text(colour = \"black\", size = 10),\n        axis.text.y = element_text(colour = \"black\", size = 10),\n        legend.key = element_rect(fill = \"white\", colour = \"white\"),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank(),\n        panel.grid.major = element_line(colour = \"#d3d3d3\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\", face = \"bold\"),\n        text = element_text(family = \"MaruBuri Regular\"),\n        legend.key.size = unit(2, \"lines\")) +\n  geom_point(size = 3)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np1\n\nWarning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family\nnot found in Windows font database\n\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\nWarning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font\nfamily not found in Windows font database\n\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database\n\nWarning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :\nfont family not found in Windows font database",
    "crumbs": [
      "Home",
      "R 기초",
      "ggplot2"
    ]
  },
  {
    "objectID": "ggplot2.html#데이터",
    "href": "ggplot2.html#데이터",
    "title": "ggplot2",
    "section": "",
    "text": "간단한 데이터를 생성하고, 이를 시각화하는 방법을 알아보겠습니다. 이 데이터는 (Mauricio Vargas Sepúlveda, 2023)에서 가져왔습니다.\n\nchilean_exports &lt;- \"year,product,export,percentage\n2006,copper,4335009500,81\n2006,others,1016726518,19\n2007,copper,9005361914,86\n2007,others,1523085299,14\n2008,copper,6907056354,80\n2008,others,1762684216,20\n2009,copper,10529811075,81\n2009,others,2464094241,19\n2010,copper,14828284450,85\n2010,others,2543015596,15\n2011,copper,15291679086,82\n2011,others,3447972354,18\n2012,copper,14630686732,80\n2012,others,3583968218,20\n2013,copper,15244038840,79\n2013,others,4051281128,21\n2014,copper,14703374241,78\n2014,others,4251484600,22\n2015,copper,13155922363,78\n2015,others,3667286912,22\n\"\nexports_data &lt;- read_csv(chilean_exports)\n\nRows: 20 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): product\ndbl (3): year, export, percentage\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.",
    "crumbs": [
      "Home",
      "R 기초",
      "ggplot2"
    ]
  },
  {
    "objectID": "ggplot2.html#선-그래프",
    "href": "ggplot2.html#선-그래프",
    "title": "ggplot2",
    "section": "",
    "text": "먼저 간단한 선(line) 그래프를 그려보겠습니다. 그래프를 초기화하기 위해 ggplot에 exports_data를 데이터로 지정하고 각 축에 변수(x, y)를 지정합니다. 그런 다음 geom_line 명령을 추가하여 선 그래프 화면에 출력하도록 합니다. 선 그래프의 두께를 조절하기 위해서 linewidth를 1.5로 설정합니다. 산점도(geom_point), 박스(geom_boxplot), 히스토그램(geom_histogram), 막대(geom_bar) 등과 같은 그래프 등을 많이 활용합니다.\n\np1 &lt;- ggplot(data = exports_data, mapping = aes(x = year, y = export, colour = product)) +\n  geom_line(linewidth = 1.5)\np1\n\n\n\n\n\n\n\n\n그래프에 몇가지 정보를 추가해보도록 하겠습니다. 특히 범례를 중점적으로 수정하도록 하겠습니다.\n\nexports_data &lt;- exports_data %&gt;%\n  mutate(product = factor(product, levels = c(\"copper\",\"others\"),\n                          labels = c(\"Copper \",\"Pulp wood, Fruit, Salmon & Others\")))\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  theme(text=element_text(family=\"MaruBuri Regular\"),\n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\",\n        legend.title = element_blank())\np1\n\n\n\n\n\n\n\n\n축(x,y)의 데이터와 제목을 추가하도록 하겠습니다.\n\np1 &lt;- p1 + scale_x_continuous(breaks = seq(2006,2015,1)) + \n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\")\np1\n\n\n\n\n\n\n\n\n약간의 색을 변경할 수도 있습니다.\n\ncolour &lt;- c(\"#5F9EA0\", \"#E1B378\")\np1 &lt;- p1 + scale_colour_manual(values = colour)\np1\n\n\n\n\n\n\n\n\n해당 그래프에 테마(theme_bw)를 적용해보도록 하겠습니다.\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_colour_manual(values = colour) +\n  theme_bw() +\n  theme(legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank())\np1\n\n\n\n\n\n\n\n\n테마를 조금 수정해보도록 하겠습니다. 세부적인 사항들은 ggplot2 theme에서 확인하실 수 있습니다.\n\nfill &lt;- c(\"#40b8d0\",\"#b2d183\")\n\np1 &lt;- ggplot(data = exports_data, mapping = aes(y = export, x = year, colour = product)) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(linewidth = .5, colour = \"black\"),\n      axis.line.y = element_line(linewidth = .5, colour = \"black\"),\n      axis.text.x = element_text(colour = \"black\", size = 10),\n      axis.text.y = element_text(colour = \"black\", size = 10),\n      legend.key = element_rect(fill = \"white\", colour = \"white\"),\n      legend.position = \"bottom\", legend.direction = \"horizontal\",\n      legend.title = element_blank(),\n      panel.grid.major = element_blank(),\n      panel.grid.minor = element_blank(), panel.border = element_blank(),\n      panel.background = element_blank())\np1\n\n\n\n\n\n\n\n\n테마(theme_economist)를 적용하고, 필요한 부분만 수정해보도록 하겠습니다.\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product),\n  data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  theme_economist() + scale_colour_economist() +\n  theme(axis.line.x = element_line(linewidth = .5, colour = \"black\"),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\"))\np1\n\n\n\n\n\n\n\n\n선 그래프의 가독성을 고려해서 아래와 같이 자신만의 테마로 구성하는 방법도 존재합니다.\n\ncolour &lt;- c(\"#40b8d0\", \"#b2d183\")\n\np1 &lt;- ggplot(aes(y = export, x = year, colour = product), data = exports_data) +\n  geom_line(linewidth = 1.5) +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_colour_manual(values = colour) +\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, size = .5),\n        axis.text.x = element_text(colour = \"black\", size = 10),\n        axis.text.y = element_text(colour = \"black\", size = 10),\n        legend.key = element_rect(fill = \"white\", colour = \"white\"),\n        legend.position = \"bottom\",\n        legend.direction = \"horizontal\",\n        legend.title = element_blank(),\n        panel.grid.major = element_line(colour = \"#d3d3d3\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\", face = \"bold\"),\n        text = element_text(family = \"MaruBuri Regular\"),\n        legend.key.size = unit(2, \"lines\")) +\n  geom_point(size = 3)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np1",
    "crumbs": [
      "Home",
      "R 기초",
      "ggplot2"
    ]
  },
  {
    "objectID": "ggplot2.html#영역-차트area-chart",
    "href": "ggplot2.html#영역-차트area-chart",
    "title": "ggplot2",
    "section": "",
    "text": "영역 차트는 선 그래프와 유사하지만, 선 그래프의 아래 부분을 색칠하여 영역을 표시하는 차트입니다. 아래는 영역 차트를 그리는 예제입니다. 영역 차트는 geom_area()를 사용하여 그릴 수 있습니다.\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = product), data = exports_data) + geom_area()\np2\n\n\n\n\n\n\n\n\n영역을 채우는 순서를 교체(fct_rev)하려고 합니다.\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + geom_area()\np2\n\n\n\n\n\n\n\n\n범례를 조정해보도록 하겠습니다.\n\np2 &lt;- p2 + theme(legend.position = \"bottom\", \n                 legend.direction = \"horizontal\", \n                 legend.title = element_blank())\np2\n\n\n\n\n\n\n\n\n앞선 예제와 같이 그래프에 몇가지 정보를 추가하기 위해서는 기존의 데이터를 수정해야 합니다.\n\nexports_data &lt;- exports_data %&gt;%\n  mutate(product = factor(product, levels = c(\"copper\",\"others\"),\n                          labels = c(\"Copper \",\"Pulp wood, Fruit, Salmon & Others\")))\n\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\",\n        legend.title = element_blank()) + guides(fill = guide_legend(reverse = T))\np2\n\n\n\n\n\n\n\n\nx축 간격도 조정해보도록 하겠습니다.\n\np2 &lt;- p2 + scale_x_continuous(breaks = seq(2006,2015,1)) \np2\n\n\n\n\n\n\n\n\n라벨도 변경하고, 제목도 추가하도록 하겠습니다.\n\np2 &lt;- p2 + labs(title = \"Composition of Exports to China ($)\",\n                subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\")\np2\n\n\n\n\n\n\n\n\n색도 변경하겠습니다.\n\nfill &lt;- c(\"#E1B378\",\"#5F9EA0\")\np2 &lt;- p2 + scale_fill_manual(values = fill) \np2\n\n\n\n\n\n\n\n\n테마를 적용하고, 필요한 부분만 수정해보도록 하겠습니다.\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme_bw() +\n  theme(legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank()) +\n  guides(fill = guide_legend(reverse = T)) \np2\n\n\n\n\n\n\n\n\n간단하게 폰트도 변경하도록 하겠습니다.\n\nfill &lt;- c(\"#b2d183\",\"#40b8d0\")\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n        axis.line.y = element_line(size = .5, colour = \"black\"), \n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        panel.border = element_blank(), \n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \n\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\np2\n\n\n\n\n\n\n\n\ntheme_economist 테마를 적용하고, 필요한 부분만 수정해보도록 하겠습니다.\n\nfill &lt;- c(\"#00a3dc\",\"#01526d\")\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  theme_economist() +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n        axis.line.y = element_line(size = .5, colour = \"black\"), \n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        panel.border = element_blank(), \n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \np2\n\n\n\n\n\n\n\n\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") + labs(x = \"Year\", y = \"USD million\") +\n  theme_fivethirtyeight() +\n  scale_fill_manual(values = fill) +\n  theme(axis.line.x = element_line(size = .5, colour = \"black\"),\n        axis.line.y = element_line(size = .5, colour = \"black\"), \n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(), \n        panel.border = element_blank(), \n        panel.background = element_blank(),\n        plot.title = element_text(family = \"MaruBuri Regular\"),\n        legend.title = element_text(family = \"MaruBuri Regular\"),\n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \np2\n\n\n\n\n\n\n\n\n\nfill &lt;- c(\"#b2d183\",\"#40b8d0\")\n\np2 &lt;- ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = exports_data) + \n  geom_area() +\n  scale_x_continuous(breaks = seq(2006,2015,1)) +\n  labs(title = \"Composition of Exports to China ($)\",\n       subtitle = \"Source: The Observatory of Economic Complexity\") +\n  labs(x = \"Year\", y = \"USD million\") +\n  scale_fill_manual(values = fill) +\n  theme(panel.border = element_rect(colour = \"black\", fill = NA, size = .5),\n        axis.text.x = element_text(colour = \"black\", size = 10), \n        axis.text.y = element_text(colour = \"black\", size = 10), \n        legend.key = element_rect(fill = \"white\", colour = \"white\"), \n        legend.position = \"bottom\", \n        legend.direction = \"horizontal\", \n        legend.title = element_blank(),\n        panel.grid.major = element_line(colour = \"#d3d3d3\"),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.title = element_text(size = 14, family = \"MaruBuri Regular\", face = \"bold\"), \n        text = element_text(family = \"MaruBuri Regular\")) +\n  guides(fill = guide_legend(reverse = T)) \np2",
    "crumbs": [
      "Home",
      "R 기초",
      "ggplot2"
    ]
  }
]